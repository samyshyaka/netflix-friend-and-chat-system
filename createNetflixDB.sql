-- Create the schema
CREATE SCHEMA NetflixDB;
USE NetflixDB;

-- Start creating and inserting data into tables
-- These first two tables will be used to create the netflix user-profiles table 
CREATE TABLE netflix_userbase(
	user_id INT,
    subscription_type TEXT,
    monthly_revenue INT,
    join_date TEXT,
    last_payment_date TEXT,
    country TEXT,
    age INT,
    gender TEXT,
    device TEXT,
    plan_duration TEXT
    );

LOAD DATA LOCAL INFILE
'Netflix Userbase.csv' -- replace with your file path to Netflix Userbase.csv
INTO TABLE netflix_userbase
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

CREATE TABLE profiles(
	profile_name VARCHAR(255),
    profile_creation_timestamp VARCHAR(255),
    maturity_level TEXT,
    primary_language TEXT,
    auto_playback TEXT
);

LOAD DATA LOCAL INFILE
'All_Profiles.csv'-- replace with your file path to All_Profiles.csv
INTO TABLE profiles
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(profile_name, @dummy, profile_creation_timestamp, maturity_level,
primary_language, auto_playback, @dummy, @dummy, @dummy, @dummy,
@dummy, @dummy, @dummy, @dummy, @dummy, @dummy);

-- Now that we have the data for the user-profiles table, create and populate it
CREATE TABLE user_profiles (
    user_profile_id SERIAL PRIMARY KEY,
    user_id INT,
    profile_name VARCHAR(255),
    profile_creation_timestamp VARCHAR(255),
    maturity_level TEXT,
    auto_playback TEXT,
    primary_language TEXT,
    subscription_type TEXT,
    monthly_revenue INT,
    join_date DATE,
    last_payment_date DATE,
    country TEXT,
    age INT,
    gender TEXT,
    device TEXT,
    plan_duration TEXT
);

-- insert the data from profiles
INSERT INTO user_profiles (
    user_id, 
    profile_name, 
    maturity_level, 
    primary_language, 
    subscription_type, 
    monthly_revenue, 
    join_date, 
    last_payment_date, 
    country, 
    age, 
    gender, 
    device, 
    plan_duration
)
SELECT 
    NULL AS user_id, 
    profile_name, 
    maturity_level, 
    primary_language, 
    NULL AS subscription_type, 
    NULL AS monthly_revenue, 
    NULL AS join_date, 
    NULL AS last_payment_date, 
    NULL AS country, 
    NULL AS age, 
    NULL AS gender, 
    NULL AS device, 
    NULL AS plan_duration
FROM profiles;

-- Insert data from userbase
INSERT INTO user_profiles (
    user_id, 
    profile_name, 
    maturity_level, 
    primary_language, 
    subscription_type, 
    monthly_revenue, 
    join_date, 
    last_payment_date, 
    country, 
    age, 
    gender, 
    device, 
    plan_duration
)
SELECT 
    user_id, 
    NULL AS profile_name, 
    NULL AS maturity_level, 
    NULL AS primary_language, 
    subscription_type, 
    monthly_revenue, 
    join_date, 
    last_payment_date, 
    country, 
    age, 
    gender, 
    device, 
    plan_duration
FROM netflix_userbase;

-- Now, create other tables with primary/foreign key relationships
CREATE INDEX idx_profile_name ON user_profiles(profile_name);

CREATE TABLE devices(
	profile_name VARCHAR(255),
    device_id VARCHAR(255),
    device_type TEXT,
    acct_first_playback_timestamp TEXT,
    acct_last_playback_timestamp TEXT,
    profile_first_playback_timestamp TEXT,
    profile_last_playback_timestamp TEXT,
    deactivation_time TEXT,
    PRIMARY KEY (profile_name, device_id),
    FOREIGN KEY (profile_name) REFERENCES user_profiles(profile_name)
);

LOAD DATA LOCAL INFILE
'All_Devices.csv' -- replace with your file path to All_Devices.csv
INTO TABLE devices
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(profile_name, device_id, device_type, acct_first_playback_timestamp,
acct_last_playback_timestamp, @dummy, @dummy,
profile_first_playback_timestamp, profile_last_playback_timestamp,
@dummy, @dummy, deactivation_time);

CREATE TABLE search_history(
	profile_name VARCHAR(255),
    country_iso_code TEXT,
    device TEXT,
    is_child BOOLEAN,
    query_typed TEXT,
    displayed_name TEXT,
    action TEXT,
    section TEXT, #If the result was generated based on the search result or autogenerated
    timestamp_utc VARCHAR(255),
    PRIMARY KEY (profile_name, timestamp_utc),
    FOREIGN KEY (profile_name) REFERENCES user_profiles(profile_name)
);

LOAD DATA LOCAL INFILE
'All_SearchHistory.csv' -- replace with your file path to All_SearchHistory.csv
INTO TABLE search_history
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(profile_name, country_iso_code, device, is_child, query_typed,
displayed_name, action, section, timestamp_utc);

CREATE TABLE viewing_activity(
	profile_name VARCHAR(255),
    start_time VARCHAR(255),
    duration TEXT,
    attribute TEXT,
    title TEXT,
    supplemental_video TEXT,
    device_type TEXT,
    bookmark TEXT,
    latest_bookmark TEXT,
    country TEXT,
    PRIMARY KEY (profile_name, start_time),
    FOREIGN KEY (profile_name) REFERENCES user_profiles(profile_name)
);

LOAD DATA LOCAL INFILE
'All_ViewingActivity.csv' -- replace with your file path to All_ViewingActivity.csv
INTO TABLE viewing_activity
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

CREATE INDEX idx_user_id ON user_profiles(user_id);

CREATE TABLE chats(
	unique_id VARCHAR(255),
    messages TEXT,
    all_authors TEXT,
    timestamps TEXT,
    show_id TEXT,
    time TEXT,
    user_id INT,
    PRIMARY KEY (unique_id),
    FOREIGN KEY (user_id) REFERENCES user_profiles(user_id)
);

LOAD DATA LOCAL INFILE
'chat_data.csv' -- replace with your file path to chat_data.csv
INTO TABLE chats
FIELDS TERMINATED BY ','
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

-- remove unnecessary tables
DROP TABLE NetflixDB.profiles;
DROP TABLE NetflixDB.netflix_userbase;